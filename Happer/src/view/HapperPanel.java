/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HapperPanel.java
 *
 * Created on 16-dec-2010, 12:20:58
 */

package view;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import model.*;

/**
 *
 * @author 09068007
 */
public class HapperPanel extends JPanel
    implements KeyListener, ActionListener{

    private Spel spel;
    private int size;

    BufferedImage mens, happer, zwarteblok, blauweblok, gras;
    

    /** Creates new form HapperPanel */
    public HapperPanel(Spel spel) {
        this.spel = spel;
        try {
            mens = ImageIO.read(new File("src/image/mens.png"));
            happer = ImageIO.read(new File("src/image/happer.png"));
            zwarteblok = ImageIO.read(new File("src/image/zwarteblok.jpg"));
            blauweblok = ImageIO.read(new File("src/image/blauweblok.jpg"));
            gras = ImageIO.read(new File("src/image/gras.jpg"));

        } catch (IOException ex) {
            //Logger.getLogger(HapperPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        size = 40;
        setLayout(new BorderLayout());
        setBackground(Color.white);
        setBorder(BorderFactory.createLineBorder(Color.blue, 3));
        this.setFocusable(true);   // Allow this panel to get focus.
        this.addKeyListener(this); // listen to our own key events.

    }


    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);

        for(int a=0;a<spel.getXHor();a++){
            for(int b=0;b<spel.getYVert();b++){
                g.drawImage(gras,a*size, b*size, size, size, this);
                g.setColor(Color.gray);
                if(spel.getSpelVakken()[a][b].getSpelObject() instanceof ZwarteBlok )g.drawImage(zwarteblok,a*size, b*size, size, size, this);
                g.setColor(Color.blue);
                if(spel.getSpelVakken()[a][b].getSpelObject() instanceof BlauweBlok )g.drawImage(blauweblok,a*size, b*size, size, size, this);
                g.setColor(Color.yellow);
                if(spel.getSpelVakken()[a][b].getSpelObject() instanceof Happer )g.drawImage(happer,a*size, b*size, size, size, this);
                g.setColor(Color.pink);
                if(spel.getSpelVakken()[a][b].getSpelObject() instanceof Mens )g.drawImage(mens,a*size, b*size, size, size, this);
                g.setColor(Color.gray);
            }
        }

        //Hieronder code voor speelveld zonder afbeeldingen
        /*for(int a=0;a<spel.getXHor();a++){
            for(int b=0;b<spel.getYVert();b++){
                g.drawRect(a*size, b*size, size, size);
                //g.drawString(""+a+","+b, a*size, b*size);
                //System.out.println(spel.spelVakken[a][b].getSpelObject());
                g.setColor(Color.gray);
                if(spel.spelVakken[a][b].getSpelObject() instanceof ZwarteBlok )g.fillRect(a*size, b*size, size, size);
                g.setColor(Color.blue);
                if(spel.spelVakken[a][b].getSpelObject() instanceof BlauweBlok )g.fillRect(a*size, b*size, size, size);
                g.setColor(Color.yellow);
                if(spel.spelVakken[a][b].getSpelObject() instanceof Happer )g.fillRect(a*size, b*size, size, size);
                g.setColor(Color.pink);
                if(spel.spelVakken[a][b].getSpelObject() instanceof Mens )g.fillRect(a*size, b*size, size, size);
                g.setColor(Color.gray);
            }
        }*/
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void keyTyped(KeyEvent e) {
       // throw new UnsupportedOperationException("Not supported yet.");
    }

    public void keyPressed(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
        switch (e.getKeyCode()) {
            case KeyEvent.VK_LEFT :
            spel.verplaatsMens("links");
            break;
            case KeyEvent.VK_RIGHT:
            spel.verplaatsMens("rechts");
            break;
            case KeyEvent.VK_UP   :
            spel.verplaatsMens("boven");
            break;
            case KeyEvent.VK_DOWN :
            spel.verplaatsMens("onder");
            break;
        }
        repaint();
    }

    public void keyReleased(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void actionPerformed(ActionEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
